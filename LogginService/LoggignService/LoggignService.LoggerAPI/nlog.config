<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="debug"
      internalLogFile="C:\Temp\nlog\internalLog_loggingService.txt">

  <extensions>
    <add assembly="NLog.Web.AspNetCore" />
  </extensions>

  <!-- the targets to write to -->
  <targets async="true">
    <target xsi:type="File" name="file-all-data" fileName="app-server-${shortdate}.log" layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}" />
    <target xsi:type="File" name="file-web" fileName="app-server-error-${shortdate}.log" layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}" />
    <target name="viewer" type="NLogViewer" address="udp://127.0.0.1:7071" includeNLogData="false" />
    <target name="console" type="ColoredConsole" layout="${time}|${pad:padding=2:inner=${threadid}}|${pad:padding=1:fixedLength=true:inner=${level}}|${pad:padding=-25:fixedLength=true:inner=${logger:shortName=true}}| ${message}${onexception:${newline}${exception:format=ToString}}" />
    <target name="database" type="Database" connectionString="${gdc:item=LoggingConnectionString}">
      <commandText>
        INSERT INTO dbo.Logs (
          Timestamp, Level, Logger, Thread,
          Message, Exception,
          RequestId, Method, Path, QueryString, [Identity],
          UserAgent, Source, Body,
          StartTime, TimeTaken, Status
        ) 
        VALUES 
        (
            @Timestamp, @Level, @Logger, @Thread,
            @Message, NULLIF(@Exception, ''),
            NULLIF(@RequestId, ''), NULLIF(@Method, ''), NULLIF(@Path, ''), NULLIF(@QueryString, ''), @Identity,
            NULLIF(@UserAgent, ''), NULLIF(@Source, ''), NULLIF(@Body, ''),
            NULLIF(@StartTime, ''), NULLIF(cast(@TimeTaken as int), 0), NULLIF(cast(@Status as int), 0)
        );
      </commandText>

      <parameter name="@Timestamp" layout="${date}" />
      <parameter name="@Level" layout="${level}" />
      <parameter name="@Logger" layout="${logger}" />
      <parameter name="@Thread" layout="${threadid}" />
      <parameter name="@Message" layout="${message}" />
      <parameter name="@Exception" layout="${exception:tostring}" />

      <parameter name="@RequestId" layout="${aspnet-TraceIdentifier}" />
      <parameter name="@Method" layout="${aspnet-Request-Method}" />
      <parameter name="@Path" layout="${aspnet-Request-Url}" />
      <parameter name="@QueryString" layout="${aspnet-Request-QueryString}" />
      <parameter name="@Identity" layout="${aspnet-User-Identity}" />

      <parameter name="@UserAgent" layout="${event-properties:item=user_agent}" />
      <parameter name="@Source" layout="${event-properties:item=source}" />
      <parameter name="@Body" layout="${event-properties:item=body}" />

      <parameter name="@StartTime" layout="${event-properties:item=start_time}" />
      <parameter name="@TimeTaken" layout="${event-properties:item=time_taken}" />
      <parameter name="@Status" layout="${event-properties:item=status}" />
    </target>

  </targets>
  <!-- rules to map from logger name to target -->
  <rules>
    <logger name="*" minlevel="Trace" writeTo="file-all-data" />

    <!--Skip non-critical Microsoft logs and so log only own logs-->
    <logger name="Microsoft.*" maxLevel="Info" final="true" />
    <logger name="*" minlevel="Trace" writeTo="console" />
    <logger name="*" minlevel="Trace" writeTo="file-web" />
    <logger name="*" minlevel="Trace" writeTo="database" />
    <logger name="*" minlevel="Trace" writeTo="viewer" />
  </rules>
</nlog>
